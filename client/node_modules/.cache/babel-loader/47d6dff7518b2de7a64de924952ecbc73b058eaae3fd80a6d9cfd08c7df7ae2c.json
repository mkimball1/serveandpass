{"ast":null,"code":"function Session(curr_date) {\n  this.date = curr_date;\n  this.passes = {\n    \"3\": 0,\n    \"2\": 0,\n    \"1\": 0,\n    \"0\": 0\n  };\n  this.count = 0;\n  this.total = 0;\n  this.average = 0;\n\n  // const [date, setDate] = useState(curr_date)\n  // const [passes, setPasses] = useState({\n  //     \"3\": 0,\n  //     \"2\": 0,\n  //     \"1\": 0,\n  //     \"0\": 0,\n  //   })\n  //   const [count, setCount] = useState(0)\n  //   const [average, setAverage] = useState(0)\n\n  //   function incrementPass(passKey) {\n  //     setPasses((currentPasses) => {\n  //       const updatedPasses = {\n  //         ...currentPasses,\n  //         [passKey]: currentPasses[passKey] + 1,\n  //       };\n  //       let total = 0;\n  //       let new_count = 0;\n  //       for (const key in updatedPasses) {\n  //         total += updatedPasses[key] * parseInt(key, 10);\n  //         new_count += updatedPasses[key];\n  //       }\n  //       setAverage(total / new_count);\n  //       setCount(new_count)\n  //       return updatedPasses;\n  //     });\n  //   }\n  //   return {passes, setPasses, count, setCount, average, setAverage, incrementPass, date, setDate}\n}\n_c = Session;\nexport default Session;\nvar _c;\n$RefreshReg$(_c, \"Session\");","map":{"version":3,"names":["Session","curr_date","date","passes","count","total","average","_c","$RefreshReg$"],"sources":["/Users/martykimball/react/serveandpass/src/Session.js"],"sourcesContent":["function Session(curr_date) {\n    this.date = curr_date\n    this.passes = {\n            \"3\": 0,\n            \"2\": 0,\n            \"1\": 0,\n            \"0\": 0,\n          }\n    this.count = 0\n    this.total = 0\n    this.average = 0\n\n    // const [date, setDate] = useState(curr_date)\n    // const [passes, setPasses] = useState({\n    //     \"3\": 0,\n    //     \"2\": 0,\n    //     \"1\": 0,\n    //     \"0\": 0,\n    //   })\n    //   const [count, setCount] = useState(0)\n    //   const [average, setAverage] = useState(0)\n    \n    //   function incrementPass(passKey) {\n    //     setPasses((currentPasses) => {\n    //       const updatedPasses = {\n    //         ...currentPasses,\n    //         [passKey]: currentPasses[passKey] + 1,\n    //       };\n    //       let total = 0;\n    //       let new_count = 0;\n    //       for (const key in updatedPasses) {\n    //         total += updatedPasses[key] * parseInt(key, 10);\n    //         new_count += updatedPasses[key];\n    //       }\n    //       setAverage(total / new_count);\n    //       setCount(new_count)\n    //       return updatedPasses;\n    //     });\n    //   }\n    //   return {passes, setPasses, count, setCount, average, setAverage, incrementPass, date, setDate}\n}\nexport default Session;"],"mappings":"AAAA,SAASA,OAAOA,CAACC,SAAS,EAAE;EACxB,IAAI,CAACC,IAAI,GAAGD,SAAS;EACrB,IAAI,CAACE,MAAM,GAAG;IACN,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;IACN,GAAG,EAAE;EACP,CAAC;EACP,IAAI,CAACC,KAAK,GAAG,CAAC;EACd,IAAI,CAACC,KAAK,GAAG,CAAC;EACd,IAAI,CAACC,OAAO,GAAG,CAAC;;EAEhB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AAACC,EAAA,GAxCQP,OAAO;AAyChB,eAAeA,OAAO;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}