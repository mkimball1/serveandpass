{"ast":null,"code":"var _s = $RefreshSig$();\n// class Session {\n//     constructor() {\n//         this.passes = {\n//                 \"3\": 0,\n//                 \"2\": 0,\n//                 \"1\": 0,\n//                 \"0\": 0,\n//             }\n//         this.count = 0;\n//         this.total = 0;\n//         this.average = 0;\n//       }\n\n//     incrementPass(passKey){\n//         this.passes[passKey] =  this.passes[passKey] + 1;\n//         this.count += 1;\n//         this.total += passKey;\n//         this.average = this.total / this.count\n//     }\n// }\nimport { useState } from \"react\";\nfunction Session() {\n  _s();\n  const [passes, setPasses] = useState({\n    \"3\": 0,\n    \"2\": 0,\n    \"1\": 0,\n    \"0\": 0\n  });\n  const [count, setCount] = useState(0);\n  const [average, setAverage] = useState(0);\n  function incrementPass(passKey) {\n    setPasses(currentPasses => {\n      const updatedPasses = {\n        ...currentPasses,\n        [passKey]: currentPasses[passKey] + 1\n      };\n      let total = 0;\n      let new_count = 0;\n      for (const key in updatedPasses) {\n        total += updatedPasses[key] * parseInt(key, 10);\n        new_count += updatedPasses[key];\n      }\n      setAverage(total / new_count);\n      setCount(new_count);\n      return updatedPasses;\n    });\n  }\n  return {\n    passes,\n    setPasses,\n    count,\n    setCount,\n    average,\n    setAverage,\n    incrementPass\n  };\n}\n_s(Session, \"why6DFjSHo8TrjcK69GgQRg8sSg=\");\n_c = Session;\nexport default Session;\nvar _c;\n$RefreshReg$(_c, \"Session\");","map":{"version":3,"names":["useState","Session","_s","passes","setPasses","count","setCount","average","setAverage","incrementPass","passKey","currentPasses","updatedPasses","total","new_count","key","parseInt","_c","$RefreshReg$"],"sources":["/Users/martykimball/react/serveandpass/src/Session.js"],"sourcesContent":["// class Session {\n//     constructor() {\n//         this.passes = {\n//                 \"3\": 0,\n//                 \"2\": 0,\n//                 \"1\": 0,\n//                 \"0\": 0,\n//             }\n//         this.count = 0;\n//         this.total = 0;\n//         this.average = 0;\n//       }\n\n//     incrementPass(passKey){\n//         this.passes[passKey] =  this.passes[passKey] + 1;\n//         this.count += 1;\n//         this.total += passKey;\n//         this.average = this.total / this.count\n//     }\n// }\nimport { useState } from \"react\";\nfunction Session() {\n    const [passes, setPasses] = useState({\n        \"3\": 0,\n        \"2\": 0,\n        \"1\": 0,\n        \"0\": 0,\n      })\n    \n      const [count, setCount] = useState(0)\n      const [average, setAverage] = useState(0)\n    \n      function incrementPass(passKey) {\n        setPasses((currentPasses) => {\n          const updatedPasses = {\n            ...currentPasses,\n            [passKey]: currentPasses[passKey] + 1,\n          };\n          let total = 0;\n          let new_count = 0;\n          for (const key in updatedPasses) {\n            total += updatedPasses[key] * parseInt(key, 10);\n            new_count += updatedPasses[key];\n          }\n          setAverage(total / new_count);\n          setCount(new_count)\n          return updatedPasses;\n        });\n      }\n      return {passes, setPasses, count, setCount, average, setAverage, incrementPass}\n}\nexport default Session;"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC;IACjC,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;IACN,GAAG,EAAE;EACP,CAAC,CAAC;EAEF,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAEzC,SAASS,aAAaA,CAACC,OAAO,EAAE;IAC9BN,SAAS,CAAEO,aAAa,IAAK;MAC3B,MAAMC,aAAa,GAAG;QACpB,GAAGD,aAAa;QAChB,CAACD,OAAO,GAAGC,aAAa,CAACD,OAAO,CAAC,GAAG;MACtC,CAAC;MACD,IAAIG,KAAK,GAAG,CAAC;MACb,IAAIC,SAAS,GAAG,CAAC;MACjB,KAAK,MAAMC,GAAG,IAAIH,aAAa,EAAE;QAC/BC,KAAK,IAAID,aAAa,CAACG,GAAG,CAAC,GAAGC,QAAQ,CAACD,GAAG,EAAE,EAAE,CAAC;QAC/CD,SAAS,IAAIF,aAAa,CAACG,GAAG,CAAC;MACjC;MACAP,UAAU,CAACK,KAAK,GAAGC,SAAS,CAAC;MAC7BR,QAAQ,CAACQ,SAAS,CAAC;MACnB,OAAOF,aAAa;IACtB,CAAC,CAAC;EACJ;EACA,OAAO;IAACT,MAAM;IAAEC,SAAS;IAAEC,KAAK;IAAEC,QAAQ;IAAEC,OAAO;IAAEC,UAAU;IAAEC;EAAa,CAAC;AACrF;AAACP,EAAA,CA7BQD,OAAO;AAAAgB,EAAA,GAAPhB,OAAO;AA8BhB,eAAeA,OAAO;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}