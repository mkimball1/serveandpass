{"ast":null,"code":"import React,{useState}from'react';import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[passes,setPasses]=useState({\"3\":0,\"2\":0,\"1\":0,\"0\":0});const[count,setCount]=useState(0);const[average,setAverage]=useState(0);function incrementPass(passKey){setPasses(currentPasses=>{const updatedPasses={...currentPasses,[passKey]:currentPasses[passKey]+1};let total=0;let new_count=0;for(const key in updatedPasses){total+=updatedPasses[key]*parseInt(key,10);new_count+=updatedPasses[key];}setAverage(total/new_count);setCount(new_count);return updatedPasses;});}return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"button_container\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>incrementPass('3'),children:\" 3 \"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>incrementPass('2'),children:\" 2 \"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>incrementPass('1'),children:\" 1 \"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>incrementPass('0'),children:\" 0 \"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\" 3: \",passes[\"3\"]]}),/*#__PURE__*/_jsxs(\"p\",{children:[\" 2: \",passes[\"2\"]]}),/*#__PURE__*/_jsxs(\"p\",{children:[\" 1: \",passes[\"1\"]]}),/*#__PURE__*/_jsxs(\"p\",{children:[\" 0: \",passes[\"0\"]]}),/*#__PURE__*/_jsxs(\"p\",{children:[\" Average: \",average.toFixed(2)]}),/*#__PURE__*/_jsxs(\"p\",{children:[\" Total Passes: \",count,\" \"]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\" 3: Perfect pass, can set middle\"}),/*#__PURE__*/_jsx(\"p\",{children:\" 2: Good pass, can set pins but not middle\"}),/*#__PURE__*/_jsx(\"p\",{children:\" 1: Bad pass, Out of System / Overpass\"}),/*#__PURE__*/_jsx(\"p\",{children:\" 0: Aced \"})]})]});}export default App;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","App","passes","setPasses","count","setCount","average","setAverage","incrementPass","passKey","currentPasses","updatedPasses","total","new_count","key","parseInt","className","children","onClick","toFixed"],"sources":["/Users/martykimball/react/serveandpass/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [passes, setPasses] = useState({\n    \"3\": 0,\n    \"2\": 0,\n    \"1\": 0,\n    \"0\": 0,\n  })\n\n  const [count, setCount] = useState(0)\n  const [average, setAverage] = useState(0)\n\n  function incrementPass(passKey) {\n    setPasses((currentPasses) => {\n      const updatedPasses = {\n        ...currentPasses,\n        [passKey]: currentPasses[passKey] + 1,\n      };\n      let total = 0;\n      let new_count = 0;\n      for (const key in updatedPasses) {\n        total += updatedPasses[key] * parseInt(key, 10);\n        new_count += updatedPasses[key];\n      }\n      setAverage(total / new_count);\n      setCount(new_count)\n      return updatedPasses;\n    });\n  }\n\n  return (\n    <div className=\"container\">  \n      <div className=\"button_container\">\n        <button onClick={() => incrementPass('3')}> 3 </button>\n        <button onClick={() => incrementPass('2')}> 2 </button>\n        <button onClick={() => incrementPass('1')}> 1 </button>\n        <button onClick={() => incrementPass('0')}> 0 </button>\n      </div>\n      <div className=\"stats\">\n        <p> 3: {passes[\"3\"]}</p>\n        <p> 2: {passes[\"2\"]}</p>\n        <p> 1: {passes[\"1\"]}</p>\n        <p> 0: {passes[\"0\"]}</p>\n        <p> Average: {average.toFixed(2)}</p>\n        <p> Total Passes: {count} </p>\n      </div>\n      <div>\n        <p> 3: Perfect pass, can set middle</p>  \n        <p> 2: Good pass, can set pins but not middle</p>  \n        <p> 1: Bad pass, Out of System / Overpass</p>  \n        <p> 0: Aced </p>  \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}