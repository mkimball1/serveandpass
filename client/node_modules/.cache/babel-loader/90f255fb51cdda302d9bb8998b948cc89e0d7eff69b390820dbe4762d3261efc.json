{"ast":null,"code":"var _jsxFileName = \"/Users/martykimball/react/serveandpass/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // const [passes, setPasses] = useState({\n  //   \"3\": 0,\n  //   \"2\": 0,\n  //   \"1\": 0,\n  //   \"0\": 0,\n  // })\n\n  // const [count, setCount] = useState(0)\n  // const [average, setAverage] = useState(0)\n\n  // function incrementPass(passKey) {\n  //   setPasses((currentPasses) => {\n  //     const updatedPasses = {\n  //       ...currentPasses,\n  //       [passKey]: currentPasses[passKey] + 1,\n  //     };\n  //     let total = 0;\n  //     let new_count = 0;\n  //     for (const key in updatedPasses) {\n  //       total += updatedPasses[key] * parseInt(key, 10);\n  //       new_count += updatedPasses[key];\n  //     }\n  //     setAverage(total / new_count);\n  //     setCount(new_count)\n  //     return updatedPasses;\n  //   });\n  // }\n\n  // return (\n  //   <div className=\"container\">  \n  //     <div className=\"button_container\">\n  //       <button onClick={() => incrementPass('3')}> 3 </button>\n  //       <button onClick={() => incrementPass('2')}> 2 </button>\n  //       <button onClick={() => incrementPass('1')}> 1 </button>\n  //       <button onClick={() => incrementPass('0')}> 0 </button>\n  //     </div>\n  //     <div className=\"stats\">\n  //       {/* Ensure you are accessing the passes in a way that works with your state management */}\n  //       <p> 3: {passes[\"3\"]}</p>\n  //       <p> 2: {passes[\"2\"]}</p>\n  //       <p> 1: {passes[\"1\"]}</p>\n  //       <p> 0: {passes[\"0\"]}</p>\n  //       <p> Average: {average.toFixed(2)}</p>\n  //       <p> Total Passes: {count} </p>\n  //     </div>\n  //   </div>\n  // );\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    children: \" hello \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/martykimball/react/serveandpass/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  // const [passes, setPasses] = useState({\n  //   \"3\": 0,\n  //   \"2\": 0,\n  //   \"1\": 0,\n  //   \"0\": 0,\n  // })\n\n  // const [count, setCount] = useState(0)\n  // const [average, setAverage] = useState(0)\n\n  // function incrementPass(passKey) {\n  //   setPasses((currentPasses) => {\n  //     const updatedPasses = {\n  //       ...currentPasses,\n  //       [passKey]: currentPasses[passKey] + 1,\n  //     };\n  //     let total = 0;\n  //     let new_count = 0;\n  //     for (const key in updatedPasses) {\n  //       total += updatedPasses[key] * parseInt(key, 10);\n  //       new_count += updatedPasses[key];\n  //     }\n  //     setAverage(total / new_count);\n  //     setCount(new_count)\n  //     return updatedPasses;\n  //   });\n  // }\n\n  // return (\n  //   <div className=\"container\">  \n  //     <div className=\"button_container\">\n  //       <button onClick={() => incrementPass('3')}> 3 </button>\n  //       <button onClick={() => incrementPass('2')}> 2 </button>\n  //       <button onClick={() => incrementPass('1')}> 1 </button>\n  //       <button onClick={() => incrementPass('0')}> 0 </button>\n  //     </div>\n  //     <div className=\"stats\">\n  //       {/* Ensure you are accessing the passes in a way that works with your state management */}\n  //       <p> 3: {passes[\"3\"]}</p>\n  //       <p> 2: {passes[\"2\"]}</p>\n  //       <p> 1: {passes[\"1\"]}</p>\n  //       <p> 0: {passes[\"0\"]}</p>\n  //       <p> Average: {average.toFixed(2)}</p>\n  //       <p> Total Passes: {count} </p>\n  //     </div>\n  //   </div>\n  // );\n  return(\n    <button> hello </button>\n  )\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EACb;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACED,OAAA;IAAAE,QAAA,EAAQ;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAE5B;AAACC,EAAA,GAnDQN,GAAG;AAqDZ,eAAeA,GAAG;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}