{"ast":null,"code":"import React, { useState } from 'react';\nimport Legend from './Legend';\nfunction Session() {\n  this.passes = {\n    \"3\": 0,\n    \"2\": 0,\n    \"1\": 0,\n    \"0\": 0\n  };\n  this.count = 0;\n  this.average = 0;\n  this.show_legend = false;\n\n  // const [passes, setPasses] = useState({\n  //     \"3\": 0,\n  //     \"2\": 0,\n  //     \"1\": 0,\n  //     \"0\": 0,\n  // })\n\n  // const [count, setCount] = useState(0)\n  // const [average, setAverage] = useState(0)\n  // const [show_legend, updateLegend] = useState(false);\n\n  // function incrementPass(passKey) {\n  //     setPasses((currentPasses) => {\n  //         const updatedPasses = {\n  //             ...currentPasses,\n  //             [passKey]: currentPasses[passKey] + 1,\n  //         };\n  //         let total = 0;\n  //         let new_count = 0;\n  //         for (const key in updatedPasses) {\n  //             total += updatedPasses[key] * parseInt(key, 10);\n  //             new_count += updatedPasses[key];\n  //         }\n  //         setAverage(total / new_count);\n  //         setCount(new_count)\n  //         return updatedPasses;\n  //     });\n  // }\n}\n_c = Session;\nexport default Session;\nvar _c;\n$RefreshReg$(_c, \"Session\");","map":{"version":3,"names":["React","useState","Legend","Session","passes","count","average","show_legend","_c","$RefreshReg$"],"sources":["/Users/martykimball/react/serveandpass/src/Session.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Legend from './Legend';\n\nfunction Session(){\n    this.passes = {\n            \"3\": 0,\n            \"2\": 0,\n            \"1\": 0,\n            \"0\": 0,\n    }\n    this.count = 0\n    this.average = 0\n    this.show_legend = false\n    \n    // const [passes, setPasses] = useState({\n    //     \"3\": 0,\n    //     \"2\": 0,\n    //     \"1\": 0,\n    //     \"0\": 0,\n    // })\n\n    // const [count, setCount] = useState(0)\n    // const [average, setAverage] = useState(0)\n    // const [show_legend, updateLegend] = useState(false);\n\n    // function incrementPass(passKey) {\n    //     setPasses((currentPasses) => {\n    //         const updatedPasses = {\n    //             ...currentPasses,\n    //             [passKey]: currentPasses[passKey] + 1,\n    //         };\n    //         let total = 0;\n    //         let new_count = 0;\n    //         for (const key in updatedPasses) {\n    //             total += updatedPasses[key] * parseInt(key, 10);\n    //             new_count += updatedPasses[key];\n    //         }\n    //         setAverage(total / new_count);\n    //         setCount(new_count)\n    //         return updatedPasses;\n    //     });\n    // }\n}\nexport default Session;"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,UAAU;AAE7B,SAASC,OAAOA,CAAA,EAAE;EACd,IAAI,CAACC,MAAM,GAAG;IACN,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;IACN,GAAG,EAAE;EACb,CAAC;EACD,IAAI,CAACC,KAAK,GAAG,CAAC;EACd,IAAI,CAACC,OAAO,GAAG,CAAC;EAChB,IAAI,CAACC,WAAW,GAAG,KAAK;;EAExB;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AAACC,EAAA,GAvCQL,OAAO;AAwChB,eAAeA,OAAO;AAAC,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}