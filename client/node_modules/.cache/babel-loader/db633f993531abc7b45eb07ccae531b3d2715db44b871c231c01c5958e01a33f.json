{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Session from './Session';\nconst useUser = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [sessions, setSessions] = useState([]);\n  const addSession = description => {\n    setSessions(prevSessions => [...prevSessions, new Session(description)]);\n  };\n\n  // Initialize sessions with default values on first render\n  useState(() => {\n    addSession(new Date().toLocaleDateString());\n    addSession(new Date().toLocaleDateString());\n    addSession(\"11/14/2023\");\n  }, []); // Empty array ensures this only happens on the component mount\n\n  return {\n    username,\n    setUsername,\n    sessions,\n    addSession\n  };\n};\n_s(useUser, \"yF2VzhA7ZB7C8xoc3QpmAD2lcEU=\");\nexport default useUser;","map":{"version":3,"names":["useState","Session","useUser","_s","username","setUsername","sessions","setSessions","addSession","description","prevSessions","Date","toLocaleDateString"],"sources":["/Users/martykimball/react/serveandpass/src/User.js"],"sourcesContent":["import { useState } from 'react';\nimport Session from './Session';\n\nconst useUser = () => {\n  const [username, setUsername] = useState('');\n  const [sessions, setSessions] = useState([]);\n\n  const addSession = (description) => {\n    setSessions((prevSessions) => [...prevSessions, new Session(description)]);\n  };\n\n  // Initialize sessions with default values on first render\n  useState(() => {\n    addSession(new Date().toLocaleDateString());\n    addSession(new Date().toLocaleDateString());\n    addSession(\"11/14/2023\");\n  }, []); // Empty array ensures this only happens on the component mount\n\n  return { username, setUsername, sessions, addSession };\n};\n\nexport default useUser;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,OAAO,MAAM,WAAW;AAE/B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMQ,UAAU,GAAIC,WAAW,IAAK;IAClCF,WAAW,CAAEG,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAE,IAAIT,OAAO,CAACQ,WAAW,CAAC,CAAC,CAAC;EAC5E,CAAC;;EAED;EACAT,QAAQ,CAAC,MAAM;IACbQ,UAAU,CAAC,IAAIG,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAC;IAC3CJ,UAAU,CAAC,IAAIG,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAC;IAC3CJ,UAAU,CAAC,YAAY,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,OAAO;IAAEJ,QAAQ;IAAEC,WAAW;IAAEC,QAAQ;IAAEE;EAAW,CAAC;AACxD,CAAC;AAACL,EAAA,CAhBID,OAAO;AAkBb,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}