{"ast":null,"code":"var _jsxFileName = \"/Users/martykimball/react/serveandpass/src/Graph.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LineChart({\n  sessionsList\n}) {\n  _s();\n  // key = date, value = passing that day\n  let my_data = {};\n  for (const session of sessionsList) {\n    if (!my_data.hasOwnProperty(session.date)) {\n      my_data[session.date] = {\n        \"total\": Math.round(session.count * session.average),\n        \"count\": session.count\n      };\n    } else {\n      my_data[session.date]['total'] += Math.round(session.count * session.average);\n      my_data[session.date]['count'] += session.count;\n    }\n  }\n  let values = Object.values(my_data).map(day => day.total / day.count);\n  const data = {\n    labels: Object.keys(my_data),\n    datasets: [{\n      label: 'Serve Receive Rating',\n      data: values,\n      fill: true,\n      borderColor: 'rgb(75, 192, 192)',\n      tension: 0.1\n    }]\n  };\n  const options = {\n    scales: {\n      y: {\n        min: 0,\n        max: 3 // Assuming the max rating is 3\n      }\n    },\n\n    responsive: true,\n    maintainAspectRatio: false\n  };\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const ctx = canvasRef.current.getContext('2d');\n    const lineChart = new Chart(ctx, {\n      type: 'line',\n      data: data,\n      options: options\n    });\n    return () => lineChart.destroy(); // Clean-up function to destroy chart instance\n  }, [data, options]); // Corrected the dependency array\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      height: '40vh',\n      width: '80vw'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(LineChart, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useRef","useEffect","Chart","jsxDEV","_jsxDEV","LineChart","sessionsList","_s","my_data","session","hasOwnProperty","date","Math","round","count","average","values","Object","map","day","total","data","labels","keys","datasets","label","fill","borderColor","tension","options","scales","y","min","max","responsive","maintainAspectRatio","canvasRef","ctx","current","getContext","lineChart","type","destroy","style","position","height","width","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/martykimball/react/serveandpass/src/Graph.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport Chart from 'chart.js/auto';\n\nfunction LineChart({ sessionsList }) {\n    // key = date, value = passing that day\n    let my_data = {};\n    for (const session of sessionsList) {\n        if (!my_data.hasOwnProperty(session.date)) {\n            my_data[session.date] = {\n                \"total\": Math.round(session.count * session.average),\n                \"count\": session.count\n            };\n        } else {\n            my_data[session.date]['total'] += Math.round(session.count * session.average);\n            my_data[session.date]['count'] += session.count;\n        }\n    }\n\n    let values = Object.values(my_data).map(day => day.total / day.count);\n\n    const data = {\n        labels: Object.keys(my_data),\n        datasets: [\n            {\n                label: 'Serve Receive Rating',\n                data: values,\n                fill: true,\n                borderColor: 'rgb(75, 192, 192)',\n                tension: 0.1\n            }\n        ]\n    };\n\n    const options = {\n        scales: {\n            y: {\n                min: 0,\n                max: 3, // Assuming the max rating is 3\n            }\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n    };\n\n    const canvasRef = useRef(null);\n\n    useEffect(() => {\n        const ctx = canvasRef.current.getContext('2d');\n        const lineChart = new Chart(ctx, {\n            type: 'line',\n            data: data,\n            options: options,\n        });\n\n        return () => lineChart.destroy(); // Clean-up function to destroy chart instance\n    }, [data, options]); // Corrected the dependency array\n\n    return (\n        <div style={{ position: 'relative', height: '40vh', width: '80vw' }}>\n            <canvas ref={canvasRef} />\n        </div>\n    );\n}\n\nexport default LineChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,SAASA,CAAC;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EACjC;EACA,IAAIC,OAAO,GAAG,CAAC,CAAC;EAChB,KAAK,MAAMC,OAAO,IAAIH,YAAY,EAAE;IAChC,IAAI,CAACE,OAAO,CAACE,cAAc,CAACD,OAAO,CAACE,IAAI,CAAC,EAAE;MACvCH,OAAO,CAACC,OAAO,CAACE,IAAI,CAAC,GAAG;QACpB,OAAO,EAAEC,IAAI,CAACC,KAAK,CAACJ,OAAO,CAACK,KAAK,GAAGL,OAAO,CAACM,OAAO,CAAC;QACpD,OAAO,EAAEN,OAAO,CAACK;MACrB,CAAC;IACL,CAAC,MAAM;MACHN,OAAO,CAACC,OAAO,CAACE,IAAI,CAAC,CAAC,OAAO,CAAC,IAAIC,IAAI,CAACC,KAAK,CAACJ,OAAO,CAACK,KAAK,GAAGL,OAAO,CAACM,OAAO,CAAC;MAC7EP,OAAO,CAACC,OAAO,CAACE,IAAI,CAAC,CAAC,OAAO,CAAC,IAAIF,OAAO,CAACK,KAAK;IACnD;EACJ;EAEA,IAAIE,MAAM,GAAGC,MAAM,CAACD,MAAM,CAACR,OAAO,CAAC,CAACU,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,KAAK,GAAGD,GAAG,CAACL,KAAK,CAAC;EAErE,MAAMO,IAAI,GAAG;IACTC,MAAM,EAAEL,MAAM,CAACM,IAAI,CAACf,OAAO,CAAC;IAC5BgB,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,sBAAsB;MAC7BJ,IAAI,EAAEL,MAAM;MACZU,IAAI,EAAE,IAAI;MACVC,WAAW,EAAE,mBAAmB;MAChCC,OAAO,EAAE;IACb,CAAC;EAET,CAAC;EAED,MAAMC,OAAO,GAAG;IACZC,MAAM,EAAE;MACJC,CAAC,EAAE;QACCC,GAAG,EAAE,CAAC;QACNC,GAAG,EAAE,CAAC,CAAE;MACZ;IACJ,CAAC;;IACDC,UAAU,EAAE,IAAI;IAChBC,mBAAmB,EAAE;EACzB,CAAC;EAED,MAAMC,SAAS,GAAGpC,MAAM,CAAC,IAAI,CAAC;EAE9BC,SAAS,CAAC,MAAM;IACZ,MAAMoC,GAAG,GAAGD,SAAS,CAACE,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC;IAC9C,MAAMC,SAAS,GAAG,IAAItC,KAAK,CAACmC,GAAG,EAAE;MAC7BI,IAAI,EAAE,MAAM;MACZpB,IAAI,EAAEA,IAAI;MACVQ,OAAO,EAAEA;IACb,CAAC,CAAC;IAEF,OAAO,MAAMW,SAAS,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC;EACtC,CAAC,EAAE,CAACrB,IAAI,EAAEQ,OAAO,CAAC,CAAC,CAAC,CAAC;;EAErB,oBACIzB,OAAA;IAAKuC,KAAK,EAAE;MAAEC,QAAQ,EAAE,UAAU;MAAEC,MAAM,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,eAChE3C,OAAA;MAAQ4C,GAAG,EAAEZ;IAAU;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEd;AAAC7C,EAAA,CA3DQF,SAAS;AAAAgD,EAAA,GAAThD,SAAS;AA6DlB,eAAeA,SAAS;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}