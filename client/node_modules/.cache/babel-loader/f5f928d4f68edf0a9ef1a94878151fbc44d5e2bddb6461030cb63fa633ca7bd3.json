{"ast":null,"code":"import { useState } from 'react';\nclass Session {\n  constructor() {\n    this.passes = {\n      \"3\": 0,\n      \"2\": 0,\n      \"1\": 0,\n      \"0\": 0\n    };\n    // this.sessions = [];\n  }\n}\n\n// function Session() {\n// const [passes, setPasses] = useState({\n//     \"3\": 0,\n//     \"2\": 0,\n//     \"1\": 0,\n//     \"0\": 0,\n// })\n\n// const [count, setCount] = useState(0)\n// const [average, setAverage] = useState(0)\n\n// function incrementPass(passKey) {\n//     setPasses((currentPasses) => {\n//         const updatedPasses = {\n//             ...currentPasses,\n//             [passKey]: currentPasses[passKey] + 1,\n//         };\n//         let total = 0;\n//         let new_count = 0;\n//         for (const key in updatedPasses) {\n//             total += updatedPasses[key] * parseInt(key, 10);\n//             new_count += updatedPasses[key];\n//         }\n//         setAverage(total / new_count);\n//         setCount(new_count)\n//         return updatedPasses;\n//     });\n// }\n// return { passes, count, average, incrementPass };\n// }\n\nexport default Session;","map":{"version":3,"names":["useState","Session","constructor","passes"],"sources":["/Users/martykimball/react/serveandpass/src/Session.js"],"sourcesContent":["import { useState } from 'react';\n\nclass Session {\n    constructor() {\n        this.passes = {\n                \"3\": 0,\n                \"2\": 0,\n                \"1\": 0,\n                \"0\": 0,\n            }\n        // this.sessions = [];\n      }\n}\n\n// function Session() {\n    // const [passes, setPasses] = useState({\n    //     \"3\": 0,\n    //     \"2\": 0,\n    //     \"1\": 0,\n    //     \"0\": 0,\n    // })\n\n    // const [count, setCount] = useState(0)\n    // const [average, setAverage] = useState(0)\n  \n    // function incrementPass(passKey) {\n    //     setPasses((currentPasses) => {\n    //         const updatedPasses = {\n    //             ...currentPasses,\n    //             [passKey]: currentPasses[passKey] + 1,\n    //         };\n    //         let total = 0;\n    //         let new_count = 0;\n    //         for (const key in updatedPasses) {\n    //             total += updatedPasses[key] * parseInt(key, 10);\n    //             new_count += updatedPasses[key];\n    //         }\n    //         setAverage(total / new_count);\n    //         setCount(new_count)\n    //         return updatedPasses;\n    //     });\n    // }\n    // return { passes, count, average, incrementPass };\n// }\n\n\nexport default Session;"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,OAAO,CAAC;EACVC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,MAAM,GAAG;MACN,GAAG,EAAE,CAAC;MACN,GAAG,EAAE,CAAC;MACN,GAAG,EAAE,CAAC;MACN,GAAG,EAAE;IACT,CAAC;IACL;EACF;AACN;;AAEA;AACI;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;;AAGA,eAAeF,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}